/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.9.0-rc2-master-bed14b9
 */
!function(){function e(e,t){function n(t,n,r){e(n)}function r(e,n,r){var i=this;i.isErrorGetter=r.mdIsError&&t(r.mdIsError),i.delegateClick=function(){i.input.focus()},i.element=n,i.setFocused=function(e){n.toggleClass("md-input-focused",!!e)},i.setHasValue=function(e){n.toggleClass("md-input-has-value",!!e)},i.setInvalid=function(e){n.toggleClass("md-input-invalid",!!e)},e.$watch(function(){return i.label&&i.input},function(e){e&&!i.label.attr("for")&&i.label.attr("for",i.input.attr("id"))})}return r.$inject=["$scope","$element","$attrs"],{restrict:"E",link:n,controller:r}}function t(){return{restrict:"E",require:"^?mdInputContainer",link:function(e,t,n,r){r&&!n.mdNoFloat&&(r.label=t,e.$on("$destroy",function(){r.label=null}))}}}function n(e,t,n){function r(r,i,a,l){function o(e){return c.setHasValue(!d.$isEmpty(e)),e}function u(){c.setHasValue(i.val().length>0||(i[0].validity||{}).badInput)}function s(){function n(e){return s(),e}function a(){u.style.height="auto",u.scrollTop=0;var e=l();e&&(u.style.height=e+"px")}function l(){var e=u.scrollHeight-u.offsetHeight;return u.offsetHeight+(e>0?e:0)}function o(e){u.scrollTop=0;var t=u.scrollHeight-u.offsetHeight,n=u.offsetHeight+t;u.style.height=n+"px"}var u=i[0],s=e.debounce(a,1);d?(d.$formatters.push(n),d.$viewChangeListeners.push(n)):s(),i.on("keydown input",s),i.on("scroll",o),angular.element(t).on("resize",s),r.$on("$destroy",function(){angular.element(t).off("resize",s)})}var c=l[0],d=l[1]||e.fakeNgModel(),f=angular.isDefined(a.readonly);if(c){if(c.input)throw new Error("<md-input-container> can only have *one* <input> or <textarea> child element!");c.input=i,c.label||n.expect(i,"aria-label",i.attr("placeholder")),i.addClass("md-input"),i.attr("id")||i.attr("id","input_"+e.nextUid()),"textarea"===i[0].tagName.toLowerCase()&&s();var m=c.isErrorGetter||function(){return d.$invalid&&d.$touched};r.$watch(m,c.setInvalid),d.$parsers.push(o),d.$formatters.push(o),i.on("input",u),f||i.on("focus",function(e){c.setFocused(!0)}).on("blur",function(e){c.setFocused(!1),u()}),r.$on("$destroy",function(){c.setFocused(!1),c.setHasValue(!1),c.input=null})}}return{restrict:"E",require:["^?mdInputContainer","?ngModel"],link:r}}function r(e){function t(t,n,r,i){function a(e){return s.text((n.val()||e||"").length+"/"+l),e}var l,o=i[0],u=i[1],s=angular.element('<div class="md-char-counter">');r.$set("ngTrim","false"),u.element.append(s),o.$formatters.push(a),o.$viewChangeListeners.push(a),n.on("input keydown",function(){a()}),t.$watch(r.mdMaxlength,function(t){l=t,angular.isNumber(t)&&t>0?(s.parent().length||e.enter(s,u.element,angular.element(u.element[0].lastElementChild)),a()):e.leave(s)}),o.$validators["md-maxlength"]=function(e,t){return!angular.isNumber(l)||0>l?!0:(e||n.val()||t||"").length<=l}}return{restrict:"A",require:["ngModel","^mdInputContainer"],link:t}}function i(){function e(e,t,n,r){if(r&&!angular.isDefined(r.element.attr("md-no-float"))){var i=n.placeholder;t.removeAttr("placeholder");var a='<div class="md-placeholder" ng-click="delegateClick()">'+i+"</div>";r.element.append(a)}}return{restrict:"A",require:"^^?mdInputContainer",link:e}}angular.module("material.components.input",["material.core"]).directive("mdInputContainer",e).directive("label",t).directive("input",n).directive("textarea",n).directive("mdMaxlength",r).directive("placeholder",i),e.$inject=["$mdTheming","$parse"],n.$inject=["$mdUtil","$window","$mdAria"],r.$inject=["$animate"]}();