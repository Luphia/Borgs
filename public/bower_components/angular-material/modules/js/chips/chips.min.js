/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.9.0-rc2-master-bed14b9
 */
!function(){"use strict";angular.module("material.components.chips",["material.core","material.components.autocomplete"])}(),function(){"use strict";function t(t){function i(i,n){return i.append(e),function(e,i,n,s){s&&angular.element(i[0].querySelector(".md-chip-content")).on("blur",function(){s.$scope.$apply(function(){s.selectedChip=-1})}),i.addClass("md-chip"),t(i)}}return{restrict:"E",require:"^?mdChips",compile:i}}angular.module("material.components.chips").directive("mdChip",t);var e='      <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">        {{$mdChipsCtrl.deleteHint}}      </span>';t.$inject=["$mdTheming"]}(),function(){"use strict";function t(t){function e(e,i,n,s){i.on("click",function(t){e.$apply(function(){s.removeChip(e.$$replacedScope.$index)})}),t(function(){i.attr({tabindex:-1,ariaHidden:!0}),i.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:e}}angular.module("material.components.chips").directive("mdChipRemove",t),t.$inject=["$timeout"]}(),function(){"use strict";function t(t,e){function i(e,i,n){var s=e.$parent.$mdChipsCtrl,o=s.parent.$new(!1,s.parent);o.$$replacedScope=e,o.$chip=e.$chip,o.$mdChipsCtrl=s,i.html(s.$scope.$eval(n.mdChipTransclude)),t(i.contents())(o)}return{restrict:"EA",terminal:!0,link:i,scope:!1}}angular.module("material.components.chips").directive("mdChipTransclude",t),t.$inject=["$compile","$mdUtil"]}(),function(){"use strict";function t(t,e,i,n,s){this.$timeout=s,this.$mdConstant=e,this.$scope=t,this.parent=t.$parent,this.$log=i,this.$element=n,this.ngModelCtrl=null,this.userInputNgModelCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useMdOnAppend=!1}angular.module("material.components.chips").controller("MdChipsCtrl",t),t.$inject=["$scope","$mdConstant","$log","$element","$timeout"],t.prototype.inputKeydown=function(t){var e=this.getChipBuffer();switch(t.keyCode){case this.$mdConstant.KEY_CODE.ENTER:if(this.$scope.requireMatch||!e)break;t.preventDefault(),this.appendChip(e),this.resetChipBuffer();break;case this.$mdConstant.KEY_CODE.BACKSPACE:if(e)break;t.stopPropagation(),this.items.length&&this.selectAndFocusChipSafe(this.items.length-1)}},t.prototype.chipKeydown=function(t){if(!this.getChipBuffer())switch(t.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0)return;t.preventDefault(),this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:t.preventDefault(),this.selectedChip<0&&(this.selectedChip=this.items.length),this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:t.preventDefault(),this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0)return;t.preventDefault(),this.onFocus()}},t.prototype.getPlaceholder=function(){var t=this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return t?this.placeholder:this.secondaryPlaceholder},t.prototype.removeAndSelectAdjacentChip=function(t){var e=this.getAdjacentChipIndex(t);this.removeChip(t),this.$timeout(function(){this.selectAndFocusChipSafe(e)}.bind(this))},t.prototype.resetSelectedChip=function(){this.selectedChip=-1},t.prototype.getAdjacentChipIndex=function(t){var e=this.items.length-1;return 0==e?-1:t==e?t-1:t},t.prototype.appendChip=function(t){this.items.indexOf(t)+1||(this.useMdOnAppend&&this.mdOnAppend&&(t=this.mdOnAppend({$chip:t})),this.items.push(t))},t.prototype.useMdOnAppendExpression=function(){this.useMdOnAppend=!0},t.prototype.getChipBuffer=function(){return this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer},t.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},t.prototype.removeChip=function(t){this.items.splice(t,1)},t.prototype.removeChipAndFocusInput=function(t){this.removeChip(t),this.onFocus()},t.prototype.selectAndFocusChipSafe=function(t){return this.items.length?t===this.items.length?this.onFocus():(t=Math.max(t,0),t=Math.min(t,this.items.length-1),this.selectChip(t),void this.focusChip(t)):(this.selectChip(-1),void this.onFocus())},t.prototype.selectChip=function(t){t>=-1&&t<=this.items.length?this.selectedChip=t:this.$log.warn("Selected Chip index out of bounds; ignoring.")},t.prototype.selectAndFocusChip=function(t){this.selectChip(t),-1!=t&&this.focusChip(t)},t.prototype.focusChip=function(t){this.$element[0].querySelector('md-chip[index="'+t+'"] .md-chip-content').focus()},t.prototype.configureNgModel=function(t){this.ngModelCtrl=t;var e=this;t.$render=function(){e.items=e.ngModelCtrl.$viewValue}},t.prototype.onFocus=function(){var t=this.$element[0].querySelector("input");t&&t.focus(),this.resetSelectedChip()},t.prototype.onInputFocus=function(){this.inputHasFocus=!0,this.resetSelectedChip()},t.prototype.onInputBlur=function(){this.inputHasFocus=!1},t.prototype.configureUserInput=function(t){this.userInputElement=t;var e=t.controller("ngModel");e!=this.ngModelCtrl&&(this.userInputNgModelCtrl=e);var i=this.$scope,n=this;t.attr({tabindex:0}).on("keydown",function(t){i.$apply(function(){n.inputKeydown(t)})}).on("focus",function(){this.$scope.$apply(this.onInputFocus.bind(this))}.bind(this)).on("blur",function(){this.$scope.$apply(this.onInputBlur.bind(this))}.bind(this))},t.prototype.configureAutocomplete=function(t){t.registerSelectedItemWatcher(function(t){t&&(this.appendChip(t),this.resetChipBuffer())}.bind(this)),this.$element.find("input").on("focus",function(){this.$scope.$apply(this.onInputFocus.bind(this))}.bind(this)).on("blur",function(){this.$scope.$apply(this.onInputBlur.bind(this))}.bind(this))},t.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0}}(),function(){"use strict";function t(t,o,c){function r(e,r){function p(t){if(r.ngModel){var e=l[0].querySelector(t);return e&&e.outerHTML}}var l=r.$mdUserTemplate;r.$mdUserTemplate=null;var d=p("[md-chip-remove]")||s,a=p("md-chip-template")||n,h=p("md-autocomplete")||p("input")||i,u=l.find("md-chip");return function(e,n,s,p){angular.forEach(e.$$isolateBindings,function(t,i){t.optional&&angular.isUndefined(e[i])&&(e[i]=r.hasOwnProperty(r.$normalize(t.attrName)))}),t(n);var l=p[0];if(l.chipContentsTemplate=a,l.chipRemoveTemplate=d,l.chipInputTemplate=h,n.attr({ariaHidden:!0,tabindex:-1}).on("focus",function(){l.onFocus()}),r.ngModel&&(l.configureNgModel(n.controller("ngModel")),s.mdOnAppend&&l.useMdOnAppendExpression(),h!=i&&c(function(){0===h.indexOf("<md-autocomplete")&&l.configureAutocomplete(n.find("md-autocomplete").controller("mdAutocomplete")),l.configureUserInput(n.find("input"))})),u.length>0){var m=o(u)(e.$parent);c(function(){n.find("md-chips-wrap").prepend(m)})}}}return{template:function(t,i){return i.$mdUserTemplate=t.clone(),e},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:r,scope:{readonly:"=readonly",placeholder:"@",secondaryPlaceholder:"@",mdOnAppend:"&",deleteHint:"@",deleteButtonLabel:"@",requireMatch:"=?mdRequireMatch"}}}angular.module("material.components.chips").directive("mdChips",t);var e='      <md-chips-wrap          ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0"          ng-keydown="$mdChipsCtrl.chipKeydown($event)"          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus() }"          class="md-chips">        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index}">          <div class="md-chip-content"              tabindex="-1"              aria-hidden="true"              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>          <div class="md-chip-remove-container"              md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>        </md-chip>        <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"            class="md-chip-input-container"            md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>        </div>      </md-chips-wrap>',i='        <input            tabindex="0"            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.onInputFocus()"            ng-blur="$mdChipsCtrl.onInputBlur()"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',n="      <span>{{$chip}}</span>",s='      <button          class="md-chip-remove"          ng-if="!$mdChipsCtrl.readonly"          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"          aria-hidden="true"          tabindex="-1">        <md-icon md-svg-icon="close"></md-icon>        <span class="md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        </span>      </button>';t.$inject=["$mdTheming","$compile","$timeout"]}(),function(){"use strict";function t(){this.selectedItem=null,this.searchText=""}angular.module("material.components.chips").controller("MdContactChipsCtrl",t),t.prototype.queryContact=function(t){var e=this.contactQuery({$query:t});return this.filterSelected?e.filter(this.filterSelectedContacts.bind(this)):e},t.prototype.filterSelectedContacts=function(t){return-1==this.contacts.indexOf(t)}}(),function(){"use strict";function t(t){function i(e,i){return function(e,n,s,o){angular.forEach(e.$$isolateBindings,function(t,n){t.optional&&angular.isUndefined(e[n])&&(e[n]=i.hasOwnProperty(i.$normalize(t.attrName)))}),t(n),n.attr("tabindex","-1")}}return{template:function(t,i){return e},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:i,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",filterSelected:"=",contacts:"=ngModel",requireMatch:"=?mdRequireMatch"}}}angular.module("material.components.chips").directive("mdContactChips",t);var e='      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-require-match="$mdContactChipsCtrl.requireMatch"          md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.mdContactName"              md-no-cache="$mdContactChipsCtrl.filterSelected"              md-autoselect              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText">                {{item[$mdContactChipsCtrl.contactName]}}              </span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>            </div>          </md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}" />            </div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            </div>          </md-chip-template>      </md-chips>';t.$inject=["$mdTheming"]}();